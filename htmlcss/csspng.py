from PIL import Image, ImageDraw, ImageFont
import random
import textwrap
import os

# Define image properties
width, height = 1080, 1080
tag_font_size = 80
desc_font_size = 40
font_path = "Ubuntu-Bold.ttf"  # Update this path to the location of your Arial font
padding = 50  # Padding around the text

text_file = open("color_data.txt", "a")

# Define CSS colors as RGB tuples
css_colors_rgb = {
    "AliceBlue": (240, 248, 255),
    "AntiqueWhite": (250, 235, 215),
    "Aqua": (0, 255, 255),
    "Aquamarine": (127, 255, 212),
    "Azure": (240, 255, 255),
    "Beige": (245, 245, 220),
    "Bisque": (255, 228, 196),
    "Black": (0, 0, 0),
    "BlanchedAlmond": (255, 235, 205),
    "Blue": (0, 0, 255),
    "BlueViolet": (138, 43, 226),
    "Brown": (165, 42, 42),
    "BurlyWood": (222, 184, 135),
    "CadetBlue": (95, 158, 160),
    "Chartreuse": (127, 255, 0),
    "Chocolate": (210, 105, 30),
    "Coral": (255, 127, 80),
    "CornflowerBlue": (100, 149, 237),
    "Cornsilk": (255, 248, 220),
    "Crimson": (220, 20, 60),
    "Cyan": (0, 255, 255),
    "DarkBlue": (0, 0, 139),
    "DarkCyan": (0, 139, 139),
    "DarkGoldenRod": (184, 134, 11),
    "DarkGray": (169, 169, 169),
    "DarkGreen": (0, 100, 0),
    "DarkKhaki": (189, 183, 107),
    "DarkMagenta": (139, 0, 139),
    "DarkOliveGreen": (85, 107, 47),
    "DarkOrange": (255, 140, 0),
    "DarkOrchid": (153, 50, 204),
    "DarkRed": (139, 0, 0),
    "DarkSalmon": (233, 150, 122),
    "DarkSeaGreen": (143, 188, 143),
    "DarkSlateBlue": (72, 61, 139),
    "DarkSlateGray": (47, 79, 79),
    "DarkTurquoise": (0, 206, 209),
    "DarkViolet": (148, 0, 211),
    "DeepPink": (255, 20, 147),
    "DeepSkyBlue": (0, 191, 255),
    "DimGray": (105, 105, 105),
    "DodgerBlue": (30, 144, 255),
    "FireBrick": (178, 34, 34),
    "FloralWhite": (255, 250, 240),
    "ForestGreen": (34, 139, 34),
    "Fuchsia": (255, 0, 255),
    "Gainsboro": (220, 220, 220),
    "GhostWhite": (248, 248, 255),
    "Gold": (255, 215, 0),
    "GoldenRod": (218, 165, 32),
    "Gray": (128, 128, 128),
    "Green": (0, 128, 0),
    "GreenYellow": (173, 255, 47),
    "HoneyDew": (240, 255, 240),
    "HotPink": (255, 105, 180),
    "IndianRed": (205, 92, 92),
    "Indigo": (75, 0, 130),
    "Ivory": (255, 255, 240),
    "Khaki": (240, 230, 140),
    "Lavender": (230, 230, 250),
    "LavenderBlush": (255, 240, 245),
    "LawnGreen": (124, 252, 0),
    "LemonChiffon": (255, 250, 205),
    "LightBlue": (173, 216, 230),
    "LightCoral": (240, 128, 128),
    "LightCyan": (224, 255, 255),
    "LightGoldenRodYellow": (250, 250, 210),
    "LightGray": (211, 211, 211),
    "LightGreen": (144, 238, 144),
    "LightPink": (255, 182, 193),
    "LightSalmon": (255, 160, 122),
    "LightSeaGreen": (32, 178, 170),
    "LightSkyBlue": (135, 206, 250),
    "LightSlateGray": (119, 136, 153),
    "LightSteelBlue": (176, 196, 222),
    "LightYellow": (255, 255, 224),
    "Lime": (0, 255, 0),
    "LimeGreen": (50, 205, 50),
    "Linen": (250, 240, 230),
    "Magenta": (255, 0, 255),
    "Maroon": (128, 0, 0),
    "MediumAquaMarine": (102, 205, 170),
    "MediumBlue": (0, 0, 205),
    "MediumOrchid": (186, 85, 211),
    "MediumPurple": (147, 112, 219),
    "MediumSeaGreen": (60, 179, 113),
    "MediumSlateBlue": (123, 104, 238),
    "MediumSpringGreen": (0, 250, 154),
    "MediumTurquoise": (72, 209, 204),
    "MediumVioletRed": (199, 21, 133),
    "MidnightBlue": (25, 25, 112),
    "MintCream": (245, 255, 250),
    "MistyRose": (255, 228, 225),
    "Moccasin": (255, 228, 181),
    "NavajoWhite": (255, 222, 173),
    "Navy": (0, 0, 128),
    "OldLace": (253, 245, 230),
    "Olive": (128, 128, 0),
    "OliveDrab": (107, 142, 35),
    "Orange": (255, 165, 0),
    "OrangeRed": (255, 69, 0),
    "Orchid": (218, 112, 214),
    "PaleGoldenRod": (238, 232, 170),
    "PaleGreen": (152, 251, 152),
    "PaleTurquoise": (175, 238, 238),
    "PaleVioletRed": (219, 112, 147),
    "PapayaWhip": (255, 239, 213),
    "PeachPuff": (255, 218, 185),
    "Peru": (205, 133, 63),
    "Pink": (255, 192, 203),
    "Plum": (221, 160, 221),
    "PowderBlue": (176, 224, 230),
    "Purple": (128, 0, 128),
    "RebeccaPurple": (102, 51, 153),
    "Red": (255, 0, 0),
    "RosyBrown": (188, 143, 143),
    "RoyalBlue": (65, 105, 225),
    "SaddleBrown": (139, 69, 19),
    "Salmon": (250, 128, 114),
    "SandyBrown": (244, 164, 96),
    "SeaGreen": (46, 139, 87),
    "SeaShell": (255, 245, 238),
    "Sienna": (160, 82, 45),
    "Silver": (192, 192, 192),
    "SkyBlue": (135, 206, 235),
    "SlateBlue": (106, 90, 205),
    "SlateGray": (112, 128, 144),
    "Snow": (255, 250, 250),
    "SpringGreen": (0, 255, 127),
    "SteelBlue": (70, 130, 180),
    "Tan": (210, 180, 140),
    "Teal": (0, 128, 128),
    "Thistle": (216, 191, 216),
    "Tomato": (255, 99, 71),
    "Turquoise": (64, 224, 208),
    "Violet": (238, 130, 238),
    "Wheat": (245, 222, 179),
    "White": (255, 255, 255),
    "WhiteSmoke": (245, 245, 245),
    "Yellow": (255, 255, 0),
    "YellowGreen": (154, 205, 50)
}

# Define a dictionary with HTML tags and their descriptions
html_tags_dict = {
    "align-content": "Adjusts the alignment of flexible container's items within the cross axis.",
    "align-items": "Aligns items in a flexible container or grid along the cross axis.",
    "align-self": "Allows the default alignment or the ability to override the alignment for individual flex items.",
    "alignment-adjust": "Property in SVG content to adjust the alignment on the baseline.",
    "alignment-baseline": "Specifies how an element's baseline is aligned within its text content area.",
    "all": "Resets all properties (except unicode-bidi and direction) to their initial or inherited values.",
    "alt": "Used in HTML to specify alternative text to display if an image cannot be shown, not a CSS property.",
    "animation": "Shorthand property to configure all animation properties at once.",
    "animation-delay": "Specifies a delay for the start of an animation.",
    "animation-direction": "Defines whether an animation should play forwards, backwards, or alternate between playing forwards and backwards.",
"animation-duration": "Specifies the length of time an animation should take to complete one cycle.",
    "animation-fill-mode": "Defines how a CSS animation should apply styles to its target before and after its execution.",
    "animation-iteration-count": "Defines the number of times an animation cycle should be played before stopping.",
    "animation-name": "Specifies the name of the @keyframes animation to use.",
    "animation-play-state": "Specifies whether the animation is running or paused.",
    "animation-timing-function": "Describes how the animation progresses through the duration of each cycle.",
    "azimuth": "Defines the sound-source position in stereo sound. It's used with aural media.",
    "backface-visibility": "Determines whether or not the back face of an element is visible when turned towards the user.",
    "background": "A shorthand property for setting all background style properties at once.",
    "background-attachment": "Determines whether a background image is fixed with regard to the viewport or scrolls with the containing block.",
    "background-clip": "Defines how far the background (color or image) should extend within an element.",
    "background-color": "Specifies the background color of an element.",
    "background-image": "Specifies one or more background images for an element.",
    "background-origin": "Specifies the origin position of a background image.",
    "background-position": "Specifies the initial position of a background image.",
    "background-repeat": "Defines how background images are repeated.",
    "background-size": "Specifies the size of the background images.",
    "background-blend-mode": "Defines the blending mode of each background layer (color and/or image).",
    "baseline-shift": "Adjusts the position of an element's baseline.",
"bleed": "Specifies how far an element's box extends beyond the page box for page-related properties in print media.",
    "bookmark-label": "Specifies the content to be used as the label for a bookmark.",
    "bookmark-level": "Specifies the level of the bookmark in a way that structures the document outline generated in a PDF.",
    "bookmark-state": "Specifies whether a bookmark is open or closed by default when the document is first opened.",
    "border": "A shorthand property for setting all border properties (width, style, and color) at once.",
    "border-color": "Specifies the color of the border. Can set different colors for each side.",
    "border-style": "Specifies the style of the border (e.g., solid, dashed, or dotted). Can set different styles for each side.",
    "border-width": "Specifies the width of the border. Can set different widths for each side.",
    "border-bottom": "A shorthand property for setting all the bottom border properties.",
    "border-bottom-color": "Specifies the color of the bottom border.",
    "border-bottom-style": "Specifies the style of the bottom border.",
    "border-bottom-width": "Specifies the width of the bottom border.",
    "border-left": "A shorthand property for setting all the left border properties.",
    "border-left-color": "Specifies the color of the left border.",
    "border-left-style": "Specifies the style of the left border.",
    "border-left-width": "Specifies the width of the left border.",
    "border-right": "A shorthand property for setting all the right border properties.",
    "border-right-color": "Specifies the color of the right border.",
    "border-right-style": "Specifies the style of the right border.",
    "border-right-width": "Specifies the width of the right border.",
    "border-top": "A shorthand property for setting all the top border properties at once.",
    "border-top-color": "Specifies the color of the top border.",
    "border-top-style": "Specifies the style of the top border (e.g., solid, dashed).",
    "border-top-width": "Specifies the width of the top border.",
    "border-collapse": "Specifies whether table borders should collapse into a single border or be separated.",
    "border-image": "A shorthand property for setting all the border-image-* properties at once.",
    "border-image-outset": "Specifies the amount by which the border image area extends beyond the border box.",
    "border-image-repeat": "Specifies how the images for the sides and the middle part of a border image are scaled and tiled.",
    "border-image-slice": "Specifies how to slice the border image.",
    "border-image-source": "Specifies the path to the image to be used as a border.",
    "border-image-width": "Specifies the widths of the image-border.",
    "border-radius": "Defines the radius of the element's corners.",
    "border-bottom-left-radius": "Defines the radius of the bottom-left corner.",
    "border-bottom-right-radius": "Defines the radius of the bottom-right corner.",
    "border-top-left-radius": "Defines the radius of the top-left corner.",
    "border-top-right-radius": "Defines the radius of the top-right corner.",
    "border-spacing": "Specifies the spacing between the borders of adjacent table cells.",
    "bottom": "Specifies the position of the bottom edge of the positioned element.",
"box-decoration-break": "Specifies how an element's decorations are drawn across multiple lines, boxes, or fragments.",
    "box-shadow": "Applies one or more shadows to an element. It can define the shadow's color, blur radius, offset, and spread radius.",
    "box-sizing": "Defines how the width and height of an element are calculated: should they include padding and borders, or not.",
    "box-snap": "A non-standard property that was proposed to control the snapping of boxes in a layout but is not widely supported.",
    "break-after": "Specifies how page, column, or region breaks should behave after the generated box.",
    "break-before": "Specifies how page, column, or region breaks should behave before the generated box.",
    "break-inside": "Prevents page, column, or region breaks from occurring within a specified box.",
    "buffered-rendering": "Non-standard. Suggests to the browser whether graphical elements should buffer their rendering to improve performance.",
    "caption-side": "Specifies the placement of a table caption.",
    "clear": "Specifies whether an element must be moved below floating elements that precede it.",
    "clear-side": "Non-standard and does not exist in formal CSS specifications. Possibly confused with the 'clear' property.",
    "clip": "Deprecated. Defines the clipping region of an absolutely positioned element.",
    "clip-path": "Specifies a clipping path where only the part of the element that is within the path will be visible.",
    "clip-rule": "Specifies the filling rule for paths within a `<clipPath>` element. It is a property related to SVG.",
    "color": "Sets the color of the text.",
    "color-adjust": "Provides control over the color adjustment algorithm used by the browser to adapt the colors of the content to the colors of the output device.",
    "color-correction": "Non-standard and not widely supported. Intended to control color correction in browsers.",
"color-interpolation": "Specifies the color space for interpolation in gradients, transforms, and other compositional effects.",
    "color-interpolation-filters": "Specifies the color space for interpolation of colors for filters. It's specifically for SVG elements or CSS filters applied to HTML elements.",
    "color-profile": "Specifies the color profile used for color rendering. Mostly applicable in SVG graphics.",
    "color-rendering": "Provides a hint to the browser about the color rendering algorithm to use for SVG and CSS properties like `background`, `color`, `border-color`.",
    "column-fill": "Controls how content is distributed to fill columns, balancing content evenly or filling each column sequentially.",
    "column-gap": "Specifies the gap between columns in a multi-column layout.",
    "column-rule": "A shorthand property for setting `column-rule-width`, `column-rule-style`, and `column-rule-color` at once.",
    "column-rule-color": "Specifies the color of the rule (line) drawn between columns in a multi-column layout.",
    "column-rule-style": "Specifies the style of the rule (line) drawn between columns in a multi-column layout.",
    "column-rule-width": "Specifies the width of the rule (line) drawn between columns in a multi-column layout.",
    "column-span": "Allows an element to span across all columns when inside a multi-column layout.",
    "columns": "A shorthand property for setting both `column-width` and `column-count` at once.",
    "column-count": "Specifies the number of columns in a multi-column layout.",
    "column-width": "Specifies the optimal width of the columns in a multi-column layout.",
    "contain": "Indicates that an element and its contents are, as much as possible, independent of the rest of the document tree.",
    "content": "Used with the `::before` and `::after` pseudo-elements, to insert generated content.",
    "counter-increment": "Increases or decreases the value of one or more CSS counters.",
    "counter-reset": "Creates or resets one or more CSS counters.",
    "counter-set": "Sets the value of one or more CSS counters.",
    "cue": "Specifies the sound to be played before or after an element's content, commonly used with speech media.",
    "cue-after": "Specifies the sound to be played after the element's content has been spoken.",
    "cue-before": "Specifies the sound to be played before the element's content is spoken.",
    "cursor": "Specifies the type of cursor to be displayed when pointing over an element.",
    "direction": "Specifies the text direction/writing direction. Values are 'ltr' (left to right) or 'rtl' (right to left).",
    "display": "Specifies how an element is displayed on the screen. Common values include 'block', 'inline', 'flex', 'grid', etc.",
    "display-inside": "Experimental. Specifies the inner display type of an element, determining its layout inside.",
    "display-outside": "Experimental. Specifies the outside display type, influencing layout behavior on the element itself.",
    "display-extras": "Non-standard. No widely recognized implementation or usage.",
    "display-box": "Non-standard. No widely recognized implementation or usage.",
    "dominant-baseline": "Specifies the dominant baseline, which is the baseline used to align the box's text and inline-level contents.",
    "elevation": "Specifies the elevation of the speaking voice for the 'cue' properties, simulating a three-dimensional spatial positioning.",
    "empty-cells": "Specifies whether to show or hide borders and backgrounds of table cells that have no content.",
    "enable-background": "Deprecated. Was used in SVG to define how the background accumulates.",
    "fill": "Specifies the color to use inside the object (used in SVG).",
    "fill-opacity": "Specifies the opacity of the color or the content the 'fill' property applies to (used in SVG).",
    "fill-rule": "Determines the algorithm to use to determine what parts of the canvas are filled when rendering an SVG 'path'.",
    "filter": "Applies graphical effects like blur or color shift to an element.",
    "float": "Specifies how an element should float to the left, right, or none.",
    "float-defer-column": "Non-standard. No widely recognized implementation or usage.",
    "float-defer-page": "Non-standard. No widely recognized implementation or usage.",
    "float-offset": "Non-standard. No widely recognized implementation or usage.",
    "float-wrap": "Non-standard. No widely recognized implementation or usage.",
"flow-into": "Defines a named flow, directing content to flow into a container, enabling fragmentation.",
    "flow-from": "Specifies the named flow from which the element pulls content, essentially linking an element with a flow defined by `flow-into`.",
    "flex": "A shorthand property for `flex-grow`, `flex-shrink`, and `flex-basis`. It specifies the flexibility of an item within a flex container.",
    "flex-basis": "Defines the default size of an element before the remaining space is distributed according to the flex factors.",
    "flex-grow": "Defines the ability of a flex item to grow if necessary, specifying how much the item will grow relative to the rest of the flex items.",
    "flex-shrink": "Defines the ability of a flex item to shrink if necessary, specifying how the item will shrink relative to the rest of the flex items.",
    "flex-flow": "A shorthand property for `flex-direction` and `flex-wrap`. It specifies the direction of flex items in a flex container.",
    "flex-direction": "Specifies the direction of the flexible items within a flex container.",
    "flex-wrap": "Specifies whether the flex items should wrap or not if there's not enough room for them in one flex line.",
    "flood-color": "Specifies the color to use in the flood operation in SVG filters, essentially the color of shadows or effects.",
    "flood-opacity": "Specifies the opacity for the color used by `flood-color`. It affects the amount of shadow or effect.",
    "font": "A shorthand property for setting `font-style`, `font-variant`, `font-weight`, `font-size`, `line-height`, and `font-family`.",
    "font-family": "Specifies the font family for text.",
    "font-size": "Specifies the font size of the text.",
    "font-stretch": "Allows you to make text narrower (condensed) or wider (expanded).",
    "font-style": "Specifies the font style for text (e.g., normal, italic, oblique).",
    "font-weight": "Specifies the weight (or boldness) of the font.",
    "font-feature-settings": "Allows control over advanced typographic features in OpenType fonts.",
    "font-kerning": "Controls the usage of the kerning information (how letters are spaced).",
    "font-language-override": "Allows authors to specify a language system for OpenType font features.",
"font-size-adjust": "Allows control over the aspect ratio of fonts, ensuring consistency of the x-height of different fonts.",
    "font-synthesis": "Controls which missing typefaces (bold or italic) may be synthesized by the browser.",
    "font-variant": "A shorthand property for setting font styles like small-caps, numeric, and alternative glyphs.",
    "font-variant-alternates": "Controls the usage of alternate glyphs associated with specific character sequences in the text.",
    "font-variant-caps": "Controls the usage of alternate glyphs for capital letters.",
    "font-variant-east-asian": "Controls the usage of alternate glyphs for East Asian scripts like Japanese and Chinese.",
    "font-variant-ligatures": "Controls which ligatures and contextual forms are used in textual content of the elements it applies to.",
    "font-variant-numeric": "Controls the usage of alternate glyphs for numbers, fractions, and ordinal markers.",
    "font-variant-position": "Controls the usage of alternate, smaller glyphs that are positioned as superscript or subscript.",
    "footnote-policy": "Non-standard and not widely supported. Intended to control the positioning and styling of footnotes.",
    "glyph-orientation-horizontal": "Specifies the orientation for glyphs and characters from horizontal scripts when rendering vertical text. Deprecated in favor of 'text-orientation'.",
    "glyph-orientation-vertical": "Specifies the orientation for glyphs and characters from vertical scripts when rendering vertical text. Deprecated in favor of 'text-orientation'.",
    "grid": "A shorthand property for setting all of the explicit grid properties (`grid-template-rows`, `grid-template-columns`, `grid-template-areas`, `grid-auto-rows`, `grid-auto-columns`, and `grid-auto-flow`) in one declaration.",
    "grid-auto-flow": "Specifies how auto-placed items get inserted in the grid.",
    "grid-auto-columns": "Specifies the size of automatically created grid columns.",
    "grid-auto-rows": "Specifies the size of automatically created grid rows.",
    "grid-template": "A shorthand property for defining grid columns, rows, and areas in one declaration.",
    "grid-template-areas": "Specifies named grid areas, establishing the cells in the grid and assigning them names.",
"grid-template-columns": "Specifies the size of the columns in a grid layout.",
    "grid-template-rows": "Specifies the size of the rows in a grid layout.",
    "grid-area": "Either specifies a name for the grid item, or this property is a shorthand for grid-row-start, grid-column-start, grid-row-end, and grid-column-end.",
    "grid-column": "A shorthand property for grid-column-start and grid-column-end, specifying a grid item’s size and location within the grid column.",
    "grid-column-start": "Specifies the line where the grid item’s start edge is placed.",
    "grid-column-end": "Specifies the line where the grid item’s end edge is placed.",
    "grid-row": "A shorthand property for grid-row-start and grid-row-end, specifying a grid item’s size and location within the grid row.",
    "grid-row-start": "Specifies the line where the grid item’s start edge is placed within the grid row.",
    "grid-row-end": "Specifies the line where the grid item’s end edge is placed within the grid row.",
    "hanging-punctuation": "Specifies whether a punctuation mark may be placed outside the line box.",
    "height": "Specifies the height of the element.",
    "hyphenate-character": "Specifies the character to use for hyphenation.",
    "hyphenate-limit-chars": "Specifies the minimum number of characters in a hyphenated word.",
    "hyphenate-limit-last": "Controls hyphenation at the end of lines.",
    "hyphenate-limit-lines": "Specifies the minimum number of lines in a block container that must be shown at the break before or after the hyphenated word.",
    "hyphenate-limit-zone": "Specifies the maximum amount of space allowed to vary from the optimal hyphenation point.",
    "hyphens": "Specifies how words should be hyphenated when text wrapping.",
    "icon": "Specifies an image that represents the element. Mostly used in graphical user interfaces to represent files, folders, etc.",
    "image-orientation": "Specifies how to correctly orient an image.",
    "image-resolution": "Specifies the intrinsic resolution of all raster images used in or on the element and its content.",
    "image-rendering": "Provides a hint to the browser about what aspects of an image are most important to preserve when the image is scaled.",
    "ime": "Non-standard and not supported. Intended to control the input method editor.",
    "ime-align": "Non-standard and not supported. Intended to align the input method editor.",
    "ime-mode": "Controls the state of the input method editor for text fields.",
    "ime-offset": "Non-standard and not supported. Intended to offset the input method editor.",
    "ime-width": "Non-standard and not supported. Intended to specify the width of the input method editor.",
    "initial-letters": "Specifies the size of the initial letters of a block of text.",
    "inline-box-align": "Non-standard and not supported. Intended to align inline boxes within a line.",
    "isolation": "Defines whether an element must create a new stacking context.",
    "justify-content": "Aligns the flexible container's items when the items do not use all available space on the main-axis.",
    "justify-items": "Aligns items along the inline (row) axis (as opposed to `align-items` which aligns along the block (column) axis).",
    "justify-self": "Aligns an item inside a flexible or grid container, overriding the container's `justify-items` property.",
    "kerning": "Adjusts the spacing between characters of text. Deprecated in favor of `font-kerning`.",
"left": "Specifies the position of the left edge of the positioned element.",
    "letter-spacing": "Controls the amount of space between each letter in text.",
    "lighting-color": "Used in SVG; specifies the color of the light source for filters that use lighting effects.",
    "line-box-contain": "Non-standard and not widely supported. Intended to specify what parts of an inline box should be considered part of the line box.",
    "line-break": "Specifies how to break lines within text.",
    "line-grid": "Non-standard and not supported. Intended to align the baselines of text to a grid.",
    "line-height": "Specifies the height of a line box.",
    "line-slack": "Non-standard and not supported. Was proposed to allow flexibility when aligning text to a grid.",
    "line-snap": "Non-standard and not supported. Intended to control the snapping of lines to a grid.",
    "list-style": "A shorthand property for setting `list-style-type`, `list-style-position`, and `list-style-image`.",
    "list-style-image": "Specifies an image to be used as the list item marker.",
    "list-style-position": "Specifies the position of the list-item markers (bullet points).",
    "list-style-type": "Specifies the type of list-item marker in a list.",
"margin": "A shorthand property for setting `margin-top`, `margin-right`, `margin-bottom`, and `margin-left` in one declaration.",
    "margin-bottom": "Specifies the bottom margin of an element.",
    "margin-left": "Specifies the left margin of an element.",
    "margin-right": "Specifies the right margin of an element.",
    "margin-top": "Specifies the top margin of an element.",
    "marker": "A shorthand property in SVG for setting `marker-start`, `marker-mid`, and `marker-end`.",
    "marker-end": "Defines the arrowhead or polymarker that will be drawn at the final vertex of the given path element or basic shape in SVG.",
    "marker-mid": "Defines the arrowhead or polymarker that will be drawn at every other vertex (other than the first and last) of the given path element or basic shape in SVG.",
    "marker-start": "Defines the arrowhead or polymarker that will be drawn at the first vertex of the given path element or basic shape in SVG.",
    "marker-pattern": "Non-standard and not supported. Intended for defining patterns for markers.",
    "marker-segment": "Non-standard and not supported. Intended for defining markers for line segments.",
    "marker-knockout-left": "Non-standard and not supported. Intended for defining how markers on the left side of the line are adjusted or 'knocked out'.",
    "marker-knockout-right": "Non-standard and not supported. Intended for defining how markers on the right side of the line are adjusted or 'knocked out'.",
    "marker-side": "Specifies whether the markers should appear inside or outside the shape or path in SVG.",
    "marks": "Specifies crop marks and cross marks on the page when printing.",
    "marquee-direction": "Specifies the direction in which the marquee content moves.",
    "marquee-play-count": "Specifies how many times the marquee content will scroll.",
    "marquee-speed": "Specifies the speed of the marquee content.",
    "marquee-style": "Specifies the style of moving content in a marquee (scrolling content area).",
    "mask": "A shorthand property that allows you to specify whether an element is to be masked and the mask's appearance.",
    "mask-image": "Specifies the image to be used as a mask for an element.",
    "mask-repeat": "Specifies whether and how a mask image is repeated (tiled).",
    "mask-position": "Specifies the initial position of the mask image.",
    "mask-clip": "Specifies which part of the masked element's content box is affected by the mask.",
    "mask-origin": "Specifies the origin position of the mask image.",
    "mask-size": "Specifies the size of the mask image.",
    "mask-box": "Non-standard or deprecated. Was intended to define a mask as a box.",
    "mask-box-outset": "Specifies the amount by which the mask box image area extends beyond the border box.",
    "mask-box-repeat": "Specifies how the mask box image is repeated (tiled).",
    "mask-box-slice": "Defines how to slice the mask box image.",
    "mask-box-source": "Specifies the source image to be used as a mask box.",
    "mask-box-width": "Specifies the width of the mask box image.",
    "mask-type": "Specifies whether the mask is treated as a luminance or alpha mask.",
    "max-height": "Specifies the maximum height of an element.",
    "max-lines": "Specifies the maximum number of lines of text that an element can display.",
    "max-width": "Specifies the maximum width of an element.",
    "min-height": "Specifies the minimum height of an element.",
    "min-width": "Specifies the minimum width of an element.",
    "mix-blend-mode": "Specifies how an element's content should blend with its direct parent background.",
"nav-down": "Specifies where to navigate when using arrow-down navigation key.",
    "nav-index": "Specifies the navigation order for an element when using arrow keys.",
    "nav-left": "Specifies where to navigate when using arrow-left navigation key.",
    "nav-right": "Specifies where to navigate when using arrow-right navigation key.",
    "nav-up": "Specifies where to navigate when using arrow-up navigation key.",
    "object-fit": "Specifies how the content of a replaced element, such as an `<img>` or `<video>`, should be resized to fit its container.",
    "object-position": "Specifies the alignment of the replaced element inside its box.",
    "offset-after": "Defines the logical offset after the element, depending on its writing mode.",
    "offset-before": "Defines the logical offset before the element, depending on its writing mode.",
    "offset-end": "Defines the logical offset at the end side of the element, depending on its writing mode.",
    "offset-start": "Defines the logical offset at the start side of the element, depending on its writing mode.",
    "opacity": "Specifies the opacity level of an element, making it transparent.",
    "order": "Specifies the order in which a flex or grid item appears within its container.",
    "orphans": "Sets the minimum number of lines in a block container that must be shown at the bottom of a page when a page break occurs inside a block.",
    "outline": "A shorthand property for setting `outline-width`, `outline-style`, and `outline-color` in one declaration.",
    "outline-color": "Specifies the color of the outline around an element.",
    "outline-style": "Specifies the style of the outline around an element.",
    "outline-width": "Specifies the width of the outline around an element.",
    "outline-offset": "Offsets an outline, and draws it beyond the border edge.",
    "overflow": "Specifies what happens if content overflows an element's box.",
    "overflow-x": "Specifies whether or not to clip the left/right edges of content, if it overflows the element's content area.",
    "overflow-y": "Specifies whether or not to clip the top/bottom edges of content, if it overflows the element's content area.",
    "overflow-style": "Specifies the preferred scrolling methods for elements that overflow.",
    "overflow-wrap": "Specifies whether or not the browser should insert line breaks within words to prevent text from overflowing its content box.",
"padding": "A shorthand property that sets all padding properties (top, right, bottom, and left) in one declaration.",
    "padding-bottom": "Specifies the bottom padding of an element.",
    "padding-left": "Specifies the left padding of an element.",
    "padding-right": "Specifies the right padding of an element.",
    "padding-top": "Specifies the top padding of an element.",
    "page": "Specifies the page box each element should be printed to when printing a document.",
    "page-break-after": "Specifies the page-breaking behavior after an element.",
    "page-break-before": "Specifies the page-breaking behavior before an element.",
    "page-break-inside": "Specifies the page-breaking behavior inside an element.",
    "paint-order": "Specifies the order in which the fill, stroke, and markers of a shape or text element are painted.",
    "pause": "A shorthand property for setting the `pause-before` and `pause-after` properties.",
    "pause-after": "Specifies the amount of time to be paused after speaking an element's content.",
    "pause-before": "Specifies the amount of time to be paused before speaking an element's content.",
    "perspective": "Specifies the perspective from which all child elements of the object are viewed, for 3D-positioned elements.",
    "perspective-origin": "Defines the origin (the vanishing point for the 3D space) for the perspective property.",
    "pitch": "Specifies the pitch or frequency of the speaking voice.",
    "pitch-range": "Specifies the range of variation in pitch (frequency) for the speaking voice.",
    "play-during": "Specifies a sound to be played while an element's content is being spoken.",
    "pointer-events": "Defines under what circumstances (if any) a particular graphic element can become the target of mouse events.",
    "position": "Specifies the type of positioning method used for an element (static, relative, absolute, fixed, or sticky).",
"quotes": "Specifies the type of quotation marks for embedded quotations.",
    "region-fragment": "Controls the fragmentation of content in a region-based multicol layout.",
    "resize": "Specifies whether or not an element is resizable by the user.",
    "rest": "A shorthand property for setting both `rest-before` and `rest-after`.",
    "rest-after": "Specifies a rest or pause after an element's content has been spoken.",
    "rest-before": "Specifies a rest or pause before an element's content is spoken.",
    "richness": "Specifies the richness or brightness of the speaking voice.",
    "right": "Specifies the right position of a positioned element.",
    "ruby-align": "Specifies the alignment of ruby annotations over or under the base text.",
    "ruby-merge": "Specifies whether adjacent ruby annotations are to be merged together.",
    "ruby-position": "Specifies the position of ruby annotations relative to the base text.",
    "scroll-behavior": "Specifies whether to smoothly animate the scroll position, instead of a straight jump, when the user clicks on a link within a scrollable box.",
    "scroll-snap-coordinate": "Defines the x and y coordinate within an element that will align with the 'scroll-snap-destination' of the parent scrolling box.",
    "scroll-snap-destination": "Specifies the final position of the viewport after scrolling ends, aligning it with the specified point within the scrolling box.",
    "scroll-snap-points-x": "Defines snap points on the x-axis to which the scrolling operation will snap.",
    "scroll-snap-points-y": "Defines snap points on the y-axis to which the scrolling operation will snap.",
    "scroll-snap-type": "Specifies the type of scrolling snap points for a scroll container.",
    "shape-image-threshold": "Specifies a threshold value that defines which pixels of an image are considered solid for the purpose of shape-outside.",
    "shape-inside": "Specifies geometric shapes to define an area for inline-level content flow inside the element.",
    "shape-margin": "Specifies a margin for shapes created by `shape-outside`.",
    "shape-outside": "Specifies a shape outside of which inline content should wrap.",
    "shape-padding": "Non-standard and not supported. Intended to provide internal padding to shapes defined by `shape-outside`.",
    "shape-rendering": "Provides hints to the renderer about what trade-offs to make when rendering shapes like paths, circles, or rectangles.",
"quotes": "Specifies the type of quotation marks for embedded quotations.",
    "region-fragment": "Controls the fragmentation of content in regions.",
    "resize": "Specifies whether or not an element is resizable by the user.",
    "rest": "A shorthand property for setting both `rest-before` and `rest-after`.",
    "rest-after": "Specifies a period of silence to be observed after speaking an element's content.",
    "rest-before": "Specifies a period of silence to be observed before speaking an element's content.",
    "richness": "Affects the richness or brightness of the speaking voice.",
    "right": "Specifies the right position of a positioned element.",
    "ruby-align": "Specifies the alignment of ruby annotations relative to the base text.",
    "ruby-merge": "Specifies whether adjacent ruby annotations are to be merged.",
    "ruby-position": "Specifies the position of ruby annotations relative to the base text.",
    "scroll-behavior": "Specifies whether to smoothly animate the scroll position in a scrollable box, instead of a straight jump.",
    "scroll-snap-coordinate": "Defines the x and y coordinate within an element that will align with the corresponding scroll-snap-destination point of the parent scrolling box.",
    "scroll-snap-destination": "Defines the x and y position within the viewport to which the scroll-snap-coordinate of an element will align.",
    "scroll-snap-points-x": "Defines snap points along the x-axis of the scroll container.",
    "scroll-snap-points-y": "Defines snap points along the y-axis of the scroll container.",
    "scroll-snap-type": "Specifies how snapping occurs in a scrollable box when the user performs a scrolling operation.",
    "shape-image-threshold": "Defines a threshold value for the alpha channel of images used by the `shape-outside` property.",
    "shape-inside": "Specifies a shape inside which the content of an element is to be flowed.",
    "shape-margin": "Specifies a margin for a shape created by `shape-outside`.",
    "shape-outside": "Specifies a shape around which inline content should wrap.",
    "shape-padding": "Non-standard and not supported. Intended to provide internal padding to shapes specified by `shape-outside`.",
    "shape-rendering": "Provides hints to the renderer about what tradeoffs to make when rendering shapes like paths, circles, or rectangles.",
    "size": "Specifies the size and orientation of the pages box.",
    "speak": "Specifies whether or not to speak the element's content, for screen readers.",
    "speak-as": "Specifies how content will be spoken by screen readers, including punctuation, numerals, and so forth.",
    "speak-header": "Specifies whether table headers should be spoken before every cell, row, or not at all.",
    "speak-numeral": "Specifies how numerals are spoken.",
    "speak-punctuation": "Specifies whether punctuation is spoken.",
    "speech-rate": "Specifies the speaking rate for the speaking voice.",
    "stop-color": "Specifies the color at a gradient stop in an SVG element.",
    "stop-opacity": "Specifies the opacity at a gradient stop in an SVG element.",
    "stress": "Specifies the amount of stress in the speaking voice, which can change the meaning of sentences.",
    "string-set": "Non-standard and not widely supported. Intended to assign string values to counters for generated content.",
    "stroke": "Specifies the color of the stroke (outline) of SVG shapes.",
    "stroke-dasharray": "Specifies the pattern of dashes and gaps used to paint the stroke of SVG shapes.",
    "stroke-dashoffset": "Specifies the distance into the dash pattern to start the dash.",
    "stroke-linecap": "Specifies the shape to be used at the ends of open subpaths when they are stroked.",
    "stroke-linejoin": "Specifies the shape to be used at the corners of paths or basic shapes when they are stroked.",
    "stroke-miterlimit": "Limits the ratio of the miter length to the stroke width.",
    "stroke-opacity": "Specifies the opacity of the stroke (outline) of SVG shapes.",
    "stroke-width": "Specifies the width of the stroke (outline) of SVG shapes.",
"tab-size": "Specifies the width of tab characters (U+0009) in spaces.",
    "table-layout": "Defines the algorithm used to lay out table cells, rows, and columns.",
    "text-align": "Specifies the horizontal alignment of text in an element.",
    "text-align-all": "Adjusts the alignment of all lines of the text in a block, except the last line if `text-align-last` is specified.",
    "text-align-last": "Specifies how the last line of a block or a line right before a forced line break is aligned when `text-align` is `justify`.",
    "text-anchor": "Used with SVG text to specify how text is horizontally positioned relative to a given point.",
    "text-combine-upright": "Specifies the combination of characters within an upright orientation in vertical writing modes.",
    "text-decoration": "A shorthand property for setting text decoration style, color, and line.",
    "text-decoration-color": "Specifies the color of text decoration (underlines, overlines, linethroughs).",
    "text-decoration-line": "Specifies the type of text decoration (underline, overline, line-through).",
    "text-decoration-style": "Specifies the style of the text decoration (solid, double, dotted, dashed, wavy).",
    "text-decoration-skip": "Specifies what parts of an element’s content are skipped over when applying `text-decoration`.",
    "text-emphasis": "A shorthand property for setting the emphasis mark style and color applied to text in East Asian typography.",
    "text-emphasis-color": "Specifies the color of the emphasis marks.",
    "text-emphasis-style": "Specifies the style of the emphasis marks (filled or open dots, circles, double circles, triangles, or sesame).",
    "text-emphasis-position": "Specifies the position of the emphasis marks with respect to the text.",
    "text-emphasis-skip": "Specifies elements that emphasis marks should skip over.",
    "text-height": "Specifies the block-progression dimension of the text content area of an inline box.",
    "text-indent": "Specifies the indentation of the first line in a block of text.",
    "text-justify": "Specifies the justification method to use when `text-align` is set to `justify`.",
    "text-orientation": "Defines the orientation of text within a line in vertical writing modes.",
    "text-overflow": "Specifies how overflowed content that is not displayed is signaled to users.",
    "text-rendering": "Provides hints to the rendering engine about what to optimize for when rendering text.",
    "text-shadow": "Applies one or more shadows to text.",
    "text-size-adjust": "Controls the text scaling algorithm used in some mobile browsers to increase readability when laying out text.",
    "text-space-collapse": "Specifies how white space inside the element is handled.",
"text-spacing": "Controls spacing between text characters.",
    "text-transform": "Controls the capitalization of text.",
    "text-underline-position": "Specifies the position of the underline which is set using the `text-decoration` property.",
    "text-wrap": "Specifies line breaking rules for text.",
    "top": "Specifies the top position of a positioned element.",
    "touch-action": "Specifies how touch gestures are handled.",
    "transform": "Applies a 2D or 3D transformation to an element.",
    "transform-box": "Defines the layout box to which the transform and related properties apply.",
    "transform-origin": "Specifies the point at which to apply the transformations.",
    "transform-style": "Specifies whether children of the element are positioned in the 3D space or flattened.",
    "transition": "A shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.",
    "transition-delay": "Specifies the duration to wait before starting a property’s transition effect.",
    "transition-duration": "Specifies how long the transition effect should last.",
    "transition-property": "Specifies the name of the CSS property to which the transition is applied.",
    "transition-timing-function": "Specifies the speed curve of the transition effect.",
    "unicode-bidi": "Used together with the `direction` property to set or return whether the text should be overridden to support multiple languages in the same document.",
"vector-effect": "Specifies the vector effect to use when drawing an object. Particularly useful for SVG elements.",
    "vertical-align": "Sets the vertical alignment of an element.",
    "visibility": "Specifies whether or not an element is visible.",
    "voice-balance": "Controls the spatial balance of the speaking voice for audio rendering of text-to-speech.",
    "voice-duration": "Specifies how long it should take to render the selected element's text content in speech.",
    "voice-family": "Specifies the voice to be used for speech synthesis.",
    "voice-pitch": "Specifies the pitch of the speaking voice for text-to-speech.",
    "voice-range": "Specifies the range over which the voice varies in pitch.",
    "voice-rate": "Controls the speaking rate for text-to-speech.",
    "voice-stress": "Specifies the level of stress in the speaking voice for text-to-speech.",
    "voice-volume": "Controls the volume of the speaking voice for text-to-speech.",
    "volume": "Specifies the volume for audio playback.",
    "white-space": "Specifies how white space inside an element is handled.",
    "widows": "Specifies the minimum number of lines that must be left at the top of a new page or area when a page or area break occurs inside an element.",
    "width": "Specifies the width of an element.",
    "will-change": "Hints to the browser about which properties are likely to be animated or transformed for performance optimization.",
    "word-break": "Specifies how words should break when reaching the end of a line.",
    "word-spacing": "Increases or decreases the space between words in a text.",
    "word-wrap": "Allows long words to be able to break and wrap onto the next line.",
    "wrap-flow": "Specifies how content wraps around a floating element's exclusion area.",
    "wrap-through": "Specifies whether content should wrap around a floating element's exclusion area or if it should be excluded.",
    "writing-mode": "Specifies whether lines of text are laid out horizontally or vertically.",
    "z-index": "Specifies the stack order of an element."
}

# Determine if the background is dark or light
def is_dark(rgb_tuple):
    return sum(rgb_tuple) / 3 < 128

# Function to calculate the maximum width a line of text can occupy
def max_text_width(font, image_width, padding):
    return image_width - (2 * padding)

# Generate images with the specifications
def generate_images(tags_dict, font_path, tag_font_size, desc_font_size, padding):
    tag_font = ImageFont.truetype(font_path, tag_font_size)
    desc_font = ImageFont.truetype(font_path, desc_font_size)
    
    for tag, description in tags_dict.items():
        try:
            color_name, rgb_tuple = random.choice(list(css_colors_rgb.items()))
            text_color = "white" if is_dark(rgb_tuple) else "black"

            image = Image.new("RGB", (width, height), color=rgb_tuple)
            draw = ImageDraw.Draw(image)

            # Calculate the maximum width for text based on padding
            max_width = max_text_width(desc_font, width, padding)
            # Adjust the wrapper width based on the maximum text width and font size
            wrapper = textwrap.TextWrapper(width=int(max_width / (desc_font_size * 0.6)))

            wrapped_description = wrapper.wrap(text=description)
            tag_width, tag_height = draw.textsize(tag, font=tag_font)
            desc_height = sum([draw.textsize(line, font=desc_font)[1] for line in wrapped_description])
            total_height = tag_height + desc_height + (10 * (len(wrapped_description) - 1))

            initial_y = (height - total_height) / 2
            tag_x = (width - tag_width) / 2
            draw.text((tag_x, initial_y), tag, fill=text_color, font=tag_font)

            current_y = initial_y + tag_height + 20
            for line in wrapped_description:
                line_width, line_height = draw.textsize(line, font=desc_font)
                line_x = (width - line_width) / 2
                draw.text((line_x, current_y), line, fill=text_color, font=desc_font)
                current_y += line_height + 10

            filename = f"css {tag[1:-1]}.png".replace(">", "_").replace("<", "").replace("/", "_")
            image.save(filename)
            print(f"Image saved: {filename}")

           # Append text data to the text file
            text_file.write(f"Tag: {tag}\n")
            text_file.write(f"{description}\n\n")
        except:
            print("error")

    text_file.close()

generate_images(html_tags_dict, font_path, tag_font_size, desc_font_size, padding)
